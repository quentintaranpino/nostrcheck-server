<link rel="stylesheet" href="/static/css/form.css">
<form class="form">
    <div id="npub" class="mb-3">
        <label for="npub" class="mb-1">Public key</label>
        <div class="input-group">
            <input type="text" class="form-control d-none" id="pubkey-input" value="<%= request.session.metadata.pubkey %>" readonly>
            <input type="text" class="form-control" id="npub-input" value="<%= request.session.metadata.npub %>" readonly>
            <button class="btn btn-outline-secondary" type="button" id="npub-QR-btn"><i class="fa-solid fa-qrcode"></i></button>
            <button class="btn btn-outline-secondary" type="button" id="npub-copy-btn" onclick="copyToClipboard(this,document.getElementById('npub-input').value)"><i class="fa-solid fa-copy"></i></button>
        </div>
    </div>
    <div id="name" class="mb-3">
        <label for="name-input" class="mb-1">Username</label>
        <input type="text" class="form-control" id="name-input" value="">
    </div>
    <div id="display-name" class="mb-3">
        <label for="displayName-input" class="mb-1">Display name</label>
        <input type="text" class="form-control" id="displayName-input" value="">
    </div>
    <div id="picture" class="mb-3">
        <label for="picture-input" class="mb-1">Profile picture</label>
        <div class="input-group">
            <input type="text" class="form-control" id="picture-input" value="">
            <button class="btn btn-outline-secondary" type="button" id="picture-upload-btn"><i class="fa-solid fa-upload"></i></button>
            <button class="btn btn-outline-secondary" type="button" id="picture-copy-btn" onclick="copyToClipboard(this,document.getElementById('picture-input').value)"><i class="fa-solid fa-copy"></i></button>
        </div>  
        <%- include('./uploader', {instance: 'userSettingspicture', hideTos:true, oneFile:true}); %>
    </div>
    <div id="banner" class="mb-3">
        <label for="banner-input" class="mb-1">Profile banner</label>
        <div class="input-group">
            <input type="text" class="form-control" id="banner-input" value="">
            <button class="btn btn-outline-secondary" type="button" id="banner-upload-btn"><i class="fa-solid fa-upload"></i></button>
            <button class="btn btn-outline-secondary" type="button" id="banner-copy-btn" onclick="copyToClipboard(this,document.getElementById('banner-input').value)"><i class="fa-solid fa-copy"></i></button>
        </div> 
        <%- include('./uploader', {instance: 'userSettingsbanner', hideTos:true, oneFile:true}); %>
    </div>
    <div id="nip05" class="mb-3">
        <label for="nip05-input" class="mb-1">Nostr address (NIP-05)</label>
        <div class="input-group">
            <input type="text" class="form-control" id="nip05-input" value="">
            <div class="input-group-text">
                <div class="form-check form-switch">
                    <label for="lnRedirect-checkbox" class=""><i class="fa-solid fa-bolt me-2 text-warning"></i>LN redirect</button></label>
                    <input  class="form-check-input" 
                            type="checkbox" 
                            value="false"
                            checked
                            name="lnRedirect-checkbox" 
                            id="lnRedirect-checkbox"
                            >
                </div>  
            </div>  
        </div>
        <div class="form-text ms-1 me-1 d-none" id="lnRedirect-help-text">
            When you enable LN redirect, your nostraddress will work as a Lightning address. This setup will automatically apply to all Nostr clients

        </div>

    </div>
    <div id="lud16" class="mb-3">
        <label for="lud16-input" class="form-label">Lightning address</label>
        <input type="text" class="form-control" id="lud16-input" value="">
        <input type="text" class="form-control d-none" id="server-lud16" value="<%= request.session.metadata.lud16 %>" readonly>
    </div>
    <div id="website" class="mb-3">
        <label for="website" class="mb-1">Website</label>
        <input type="text" class="form-control" id="website-input" value="">
    </div>
    <div id="about" class="mb-3">
        <label for="about-input" class="form-label">About</label>
        <textarea class="form-control" id="about-input" rows="4"></textarea>
    </div>
</form>
<div class="text-center mt-1 mb-5 mb-lg-2">
    <button id="saveProfileData-btn" type="submit" class="btn btn-primary col-4" onclick="saveProfileData()">Save</button>
</div>
<script>
    
    var settingsUnsaved = false; 
    document.addEventListener('DOMContentLoaded', (event) => {

        if (localStorage.getItem('profileData')){

            document.getElementById('name-input').value = JSON.parse(localStorage.getItem('profileData')).name != undefined ? JSON.parse(localStorage.getItem('profileData')).name : "";
            document.getElementById('displayName-input').value = JSON.parse(localStorage.getItem('profileData')).display_name != undefined ? JSON.parse(localStorage.getItem('profileData')).display_name : "";
            document.getElementById('picture-input').value = JSON.parse(localStorage.getItem('profileData')).picture != undefined ? JSON.parse(localStorage.getItem('profileData')).picture : "";
            document.getElementById('banner-input').value = JSON.parse(localStorage.getItem('profileData')).banner != undefined ? JSON.parse(localStorage.getItem('profileData')).banner : "";
            document.getElementById('website-input').value = JSON.parse(localStorage.getItem('profileData')).website != undefined ? JSON.parse(localStorage.getItem('profileData')).website : "";
            document.getElementById('nip05-input').value = JSON.parse(localStorage.getItem('profileData')).nip05 != undefined ? JSON.parse(localStorage.getItem('profileData')).nip05 : "";
            document.getElementById('lud16-input').value = JSON.parse(localStorage.getItem('profileData')).lud16 != undefined ? JSON.parse(localStorage.getItem('profileData')).lud16 : "";
            document.getElementById('about-input').value = JSON.parse(localStorage.getItem('profileData')).about != undefined ? JSON.parse(localStorage.getItem('profileData')).about : "";
            document.getElementById('lnRedirect-checkbox').checked = document.getElementById('server-lud16').value != "" ? true : false;
            document.getElementById('lnRedirect-checkbox').value = document.getElementById('server-lud16').value != "" ? true : false;
            if(document.getElementById('server-lud16').value != "") document.getElementById('lnRedirect-help-text').classList.remove('d-none');
            if(document.getElementById('server-lud16').value != "") document.getElementById('lud16-input').value = document.getElementById('server-lud16').value;

        }

        document.querySelectorAll("form").forEach(form => {
            form.addEventListener("submit", function(event) {
                event.preventDefault();
            });
        });

        // Hide uploaders
        document.getElementById('userSettingspicture-uploader').classList.add('d-none');
        document.getElementById('userSettingsbanner-uploader').classList.add('d-none');

        // Uploaded files event listener
        document.addEventListener('fileUploaded', function(event) {
            if (event.detail.instance === 'userSettingspicture-') {
                const uploadedUrl = event.detail.url;
                document.getElementById('picture-input').value = uploadedUrl;
                document.getElementById('userSettingspicture-uploader').classList.add('d-none');
            }
            if (event.detail.instance === 'userSettingsbanner-') {
                const uploadedUrl = event.detail.url;
                document.getElementById('banner-input').value = uploadedUrl;
                document.getElementById('userSettingsbanner-uploader').classList.add('d-none');
            }
        });

        document.getElementById('picture-upload-btn').addEventListener('click', () => {
            if (document.getElementById('userSettingspicture-uploader').classList.contains('d-none')) {
                document.getElementById('userSettingspicture-uploader').classList.remove('d-none');
            } else {
                document.getElementById('userSettingspicture-uploader').classList.add('d-none');
            }
        });

        document.getElementById('banner-upload-btn').addEventListener('click', () => {
            if (document.getElementById('userSettingsbanner-uploader').classList.contains('d-none')) {
                document.getElementById('userSettingsbanner-uploader').classList.remove('d-none');
            } else {
                document.getElementById('userSettingsbanner-uploader').classList.add('d-none');
            }
        });

        document.getElementById('lnRedirect-checkbox').addEventListener('change', () => {
            settingsUnsaved = true;
            if (document.getElementById('lnRedirect-checkbox').checked) {
                document.getElementById('lnRedirect-help-text').classList.remove('d-none');
            } else {
                document.getElementById('lnRedirect-help-text').classList.add('d-none');
            }
        });

        const showNpubQR = () => {
            const QR = document.createElement('div');
            QR.setAttribute('id', 'npub-QR');
            QR.classList.add('d-none', 'd-flex', 'justify-content-center');
            document.getElementById('npub').appendChild(QR);

            const qrcode = new QRCode(document.getElementById("npub-QR"), {
                text: document.getElementById("npub-input").value,
                width: 250,
                height: 250
            });

            initMessageModal('#profile', document.getElementById('npub-QR'), '', 'modal-sm').then(() => {
                document.getElementById('npub-QR').classList.add('d-none');
            });
            document.getElementById('npub-QR').classList.remove('d-none');

        }
        document.getElementById('npub-QR-btn').addEventListener('click', showNpubQR);

        // Event listeners for changes in the form
        document.querySelectorAll('#userSettings input, #userSettings textarea, #userSettings select').forEach(element => {
            element.addEventListener('input', () => {
                settingsUnsaved = true;
            });
        });

        // If no NIP-05 address is set, suggest the first one from the profileNIP05 array
        const nip05Input = document.getElementById('nip05-input');
        if (!nip05Input.value && profileNIP05.length > 0) {
            const defaultSuggestion = `${profileNIP05[0].username}@${profileNIP05[0].domain}`;
            nip05Input.value = defaultSuggestion;
            settingsUnsaved = true;

            showMessage(
                `✅ NIP-05 address has been set for your user: ${defaultSuggestion}. Please save your profile data on settings tab to apply the changes on the nostr network.`,
                'alert-warning', false, 7000
            );
        }

    });

    window.addEventListener('beforeunload', (event) => {
        if (settingsUnsaved) {
            event.preventDefault();
            event.returnValue = ''; 
        }
    });

    const saveProfileData = async () => {
        const data = {};

        const fields = [
            { id: 'name-input', field: 'name' },
            { id: 'displayName-input', field: 'display_name' },
            { id: 'picture-input', field: 'picture' },
            { id: 'banner-input', field: 'banner' },
            { id: 'website-input', field: 'website' },
            { id: 'nip05-input', field: 'nip05' },
            { id: 'lud16-input', field: 'lud16' },
            { id: 'about-input', field: 'about' },
        ];

        fields.forEach(({ id, field }) => {
            const element = document.getElementById(id);
            if (element && element.value !== element.defaultValue) {
                data[field] = element.value;
            }
        });

        if (Object.keys(data).length > 0) {
            document.getElementById('saveProfileData-btn').disabled = true;
            document.getElementById('saveProfileData-btn').innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Saving...';

            let sk = '';
            if (!window.nostr){
                sk = prompt('Please enter your nostr private key to sign the data');
                if (!sk) {
                    document.getElementById('saveProfileData-btn').disabled = false;
                    document.getElementById('saveProfileData-btn').innerHTML = 'Save';
                    return;
                }
            } 

            // LN Redirect
            const lnCheckbox = document.getElementById('lnRedirect-checkbox');
            if ((!data.lud16 || data.lud16 == '') && lnCheckbox.checked) {
                showMessage('⚠️ You need to set a Lightning address to enable LN redirect', 'alert-warning');
                document.getElementById('saveProfileData-btn').disabled = false;
                document.getElementById('saveProfileData-btn').innerHTML = 'Save';
                return;
            }
            updateLnRedirect();

            // If LN redirect checkbox is checked, set lud16 to nip05 value inside data for nostr relays
            if (lnCheckbox.checked) data.lud16 = document.getElementById('nip05-input').value;

            console.debug('Saving profile data:', data);
            publishProfileData(data, document.getElementById('pubkey-input').value, sk)
                .then((result) => {
                    if (result) {
                        updateProfileFields(data);
                        showMessage('✅ Profile data saved successfully', 'alert-success');
                        document.getElementById('saveProfileData-btn').innerHTML = 'Save';
                        settingsUnsaved = false;
                    } else {
                        showMessage('⚠️ An error occurred while saving the profile data', 'alert-primary');
                        document.getElementById('saveProfileData-btn').innerHTML = 'Save';
                    }
                })
                .catch((error) => {
                    console.error("Error in publishProfileData:", error);
                    showMessage('⚠️ An error occurred while saving the profile data', 'alert-danger');
                    document.getElementById('saveProfileData-btn').innerHTML = 'Save';
                })
                .finally(() => {
                    document.getElementById('saveProfileData-btn').disabled = false;
                });

        }
    };


const updateProfileFields = (data) => {

    const fields = [
        { id: 'name',           field: 'name',          type: 'text' },
        { id: 'name',           field: 'display_name',  type: 'text' },
        { id: 'picture',        field: 'picture',       type: 'picture'},
        { id: 'banner',         field: 'banner',        type: 'banner' },
        { id: 'website',        field: 'website',       type: 'link' },
        { id: 'nip05',          field: 'nip05',         type: 'text' },
        { id: 'lud16',          field: 'lud16',         type: 'link' },
        { id: 'about',          field: 'about',         type: 'text' },
    ];

    fields.forEach(({ id, field, type }) => {
        const element = document.getElementById(id + '-header');
        const input = document.getElementById(id + '-input');
        if (element && data[field] !== undefined) {
            if (type === 'link') {
                element.href = data[field];
                element.innerText = data[field];
            }
            if (type === 'text') {
                element.innerText = data[field];
            }
            if (type === 'picture') {
                loadMedia(data[field] || '/static/resources/picture-default.webp', document.querySelectorAll('.picture-container'), ['img-thumbnail', 'border-0', 'object-fit-cover', 'w-100', 'h-100']);
            }
            if (type === 'banner') {
                loadMedia(data[field] || '/static/resources/banner-default.webp', document.querySelectorAll('.banner-container'), [], { autoplay: true, loop: true, muted: true });
            }
            if (data[field] == '' && type !== 'picture' && type !== 'banner') {
                element.parentElement.classList.add('d-none');
            } else {
                element.parentElement.classList.remove('d-none');
            }
            input.defaultValue = data[field];
        }
    });

    // Update localStorage with the new data
    if (localStorage.getItem('profileData')){
        const pData = JSON.parse(localStorage.getItem('profileData'));
        const updatedData = {...pData, ...data};
        localStorage.setItem('profileData', JSON.stringify(updatedData));
    }

};

const updateLnRedirect = async () => {

    const lud16 = document.getElementById('lud16-input').value;
    const enabled = document.getElementById('lnRedirect-checkbox').checked ? true : false;

    if (!lud16 || lud16 == '') return;

    console.debug(enabled? 'Enabling' : 'Deleting', 'LN redirect with Lightning address:', lud16);

    fetch(`/api/v2/lightningaddress/${enabled ? lud16 : ""}`, {
        method: enabled ? 'PUT' : 'DELETE',
        headers: {
            'Content-Type': 'application/json',
        }})
        .then(response => response.json())
        .then(async data => {
            if (data.status == "success") {
                showMessage(`Lightning address updated successfully`, "alert-primary");
            } else {
                showMessage(`Error updating Lightning address: ${data.message}`, "alert-warning");
            }
        })
        .catch((error) => {
            console.error('Error:', error);
        });
}

</script>