version: '3.8'

services:
  app:
    networks:
    - localnet
    image: nostrcheckme/nostrcheck-server:testing
    depends_on:
      - mariadb
      - redis
    volumes:
      - ./files:/usr/src/app/files
      - ./resources:/usr/src/app/resources
      - ./config:/usr/src/app/config
      - ./logs:/usr/src/app/logs
    restart: always
    environment: 
      DATABASE_HOST: "mariadb"
      DATABASE_USER: "nostrcheck"
      DATABASE_PASSWORD: "nostrcheck"
      DATABASE_DATABASE: "nostrcheck"
      REDIS_HOST: "redis"
      REDIS_PORT: "6379"
      REDIS_USER: "default"
      REDIS_PASSWORD: ""
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.app.loadbalancer.server.port=3000"
      - "traefik.http.services.app.loadbalancer.sticky=true"
      - "traefik.http.services.app.loadbalancer.sticky.cookie.name=app_session"
      - "traefik.http.routers.app.entrypoints=web"
      - "traefik.http.routers.app.rule=PathPrefix(`/`)"
      - "traefik.http.routers.app.service=app"
    command: "npm run start"
  mariadb:
    networks:
     - localnet
    image: mariadb:10
    volumes:
      - ./data/mysql:/var/lib/mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: nostrcheck
      MYSQL_DATABASE: nostrcheck
      MYSQL_USER: nostrcheck
      MYSQL_PASSWORD: nostrcheck
  redis:
    networks:
     - localnet
    image: redis:6
    volumes:
      - ./data/redis:/data
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
  traefik:
    networks:
      - localnet
    image: traefik:2.10
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:3000"
    ports:
      - "3000:3000"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    restart: always
networks:
  localnet: